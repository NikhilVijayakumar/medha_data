{
  "title": "Relational Databases & SQL Analysis Quiz - Feynman Follow-up Quiz",
  "description": "Deepen your understanding of relational databases, RDBMS, and SQL through Feynman-style questions that probe conceptual transformations, simplifications, mechanisms, and design rationales.",
  "type": "Feynman",
  "questions": [
    {
      "id": "feynman_q_001_related_to_primary_q_analyze_001_referential_integrity",
      "question": "Which analogy best explains 'referential integrity' to a non-technical person? (Select all that apply)",
      "options": [
        {"id": "optA", "text": "A library where every book has a valid author listed in the authors' catalog."},
        {"id": "optB", "text": "A family tree with missing branches due to incomplete records."}, 
        {"id": "optC", "text": "A puzzle where pieces can be placed anywhere without fitting rules."},
        {"id": "optD", "text": "A phone directory that allows entries with non-existent phone numbers."},
        {"id": "optE", "text": "A classroom where every student's name appears in the attendance list."}
      ],
      "correctOptionIds": ["optA", "optE"],
      "explanation": "Referential integrity ensures relationships between tables are valid. OptA (library books with valid authors) and OptE (attendance lists with real students) capture this by enforcing that foreign key values exist in referenced tables. Other options describe violations or unrelated concepts."
    },
    {
      "id": "feynman_q_002_related_to_primary_q_analyze_002_sql_foreign_key_syntax",
      "question": "How would you explain the purpose of a FOREIGN KEY constraint to a 10-year-old? (Simplified explanation required)",
      "options": [
        {"id": "optX", "text": "It’s like a special rule that ensures your toy box only has toys from your collection."},
        {"id": "optY", "text": "It’s a way to hide data from other people."}, 
        {"id": "optZ", "text": "It speeds up computer calculations by using magic numbers."},
        {"id": "optAA", "text": "It adds extra columns to tables for better organization."},
        {"id": "optBB", "text": "It lets you write secret codes in SQL."}
      ],
      "correctOptionIds": ["optX"],
      "explanation": "A FOREIGN KEY enforces that data in one table (e.g., Enrollment.StudentID) must match values in another table (Students.StudentID). OptX’s analogy of a toy box only containing toys from your collection captures this validation rule effectively."
    },
    {
      "id": "feynman_q_003_related_to_primary_q_analyze_003_subquery_flaw",
      "question": "Which scenario best explains why the subquery in the original question could fail? (Underlying mechanism explanation required)",
      "options": [
        {"id": "optM", "text": "It’s like asking for a specific color of paint, but the store has multiple shades with that name."},
        {"id": "optN", "text": "It’s similar to requesting one book from a library where all books are identical."}, 
        {"id": "optO", "text": "It guarantees exactly one result, like picking a single winner from a raffle."},
        {"id": "optP", "text": "It’s akin to asking for the tallest person in a room with no people present."},
        {"id": "optQ", "text": "It ensures data is always available instantly, like streaming video."}
      ],
      "correctOptionIds": ["optM"],
      "explanation": "The subquery may return multiple values if there are multiple courses named 'Database Systems', causing a comparison error. OptM’s analogy of paint shades with the same name illustrates this ambiguity in results."
    },
    {
      "id": "feynman_q_004_related_to_primary_q_analyze_004_normalization_principles",
      "question": "Which scenario demonstrates denormalization? (Design rationale explanation required)",
      "options": [
        {"id": "optU", "text": "Storing customer addresses in a separate table linked by CustomerID."},
        {"id": "optV", "text": "Repeating product prices in every order line item instead of referencing a Products table."}, 
        {"id": "optW", "text": "Using a single 'Notes' column to store all customer details."},
        {"id": "optX", "text": "Creating separate tables for different departments (e.g., Sales_2023, Sales_2024)."},
        {"id": "optY", "text": "Storing supervisor relationships in a dedicated Supervisors table."}
      ],
      "correctOptionIds": ["optV", "optW", "optX"],
      "explanation": "Denormalization increases redundancy. OptV (repeating prices), OptW (all-in-one Notes column), and OptX (department-specific tables) are anti-patterns that violate normalization principles by introducing duplication or structural inefficiencies."
    }
  ]
}